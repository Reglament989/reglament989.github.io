@use "sass:math";
@import url('https://fonts.googleapis.com/css2?family=Comfortaa:wght@500&family=Pacifico&display=swap');

body {
	font-family: 'Comfortaa', cursive;
	padding: 0;
	margin: 0;
}

.loading {
	display: none;
}

canvas {
	position: fixed;
	top: 0;
	left: 0;
}
main {
	position: absolute;
	z-index: 999;
	padding: 2rem;
	color: aliceblue;
	width: 96vw;
	@media all and (max-width: 600px) {
		width: auto;
	}
}

h2,
h1 {
	margin: 0;
	padding: 0;
}

main .header {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	.arrow-down {
		width: 0;
		height: 0;
		border-left: 20px solid transparent;
		border-right: 20px solid transparent;

		border-top: 20px solid #f00;
	}
	.welcome {
		margin-top: 10rem;
		padding: 0;
	}
	.Name {
		font-family: 'Pacifico', cursive;
		font-size: 2.7em;
		margin: 1rem;
		@media all and (max-width: 600px) {
			font-size: 2.3em;
		}
	}
	.About {
		margin: 0px;
		margin-bottom: 1rem;
		font-size: 1.7em;
		text-align: center;
	}
	.misc {
		left: 1rem;
		text-align: left;
	}
	.long-about {
		p {
			font-size: 1.4em;
		}
		width: 30%;
		@media all and (max-width: 600px) {
			width: auto;
		}
		font-weight: 700;
		text-align: center;
		.wavy {
			display: inline;
			padding: 0px;
			margin: 0;
		}
		.wavy:hover span {
			position: relative;
			top: 20px;
			display: inline-block;
			animation: bounce 0.3s ease infinite alternate;
			// font-family: 'Titan One', cursive;
			font-size: 2em;
			color: #fff;
			text-shadow: 0 1px 0 #ccc, 0 2px 0 #ccc, 0 3px 0 #ccc, 0 4px 0 #ccc,
				0 5px 0 #ccc, 0 6px 0 transparent, 0 7px 0 transparent,
				0 8px 0 transparent, 0 9px 0 transparent, 0 10px 10px rgba(0, 0, 0, 0.4);
		}

		h1 span:nth-child(2) {
			animation-delay: 0.1s;
		}
		h1 span:nth-child(3) {
			animation-delay: 0.2s;
		}
		h1 span:nth-child(4) {
			animation-delay: 0.3s;
		}
		h1 span:nth-child(5) {
			animation-delay: 0.4s;
		}
		h1 span:nth-child(6) {
			animation-delay: 0.5s;
		}
		h1 span:nth-child(7) {
			animation-delay: 0.6s;
		}
		h1 span:nth-child(8) {
			animation-delay: 0.7s;
		}

		@keyframes bounce {
			100% {
				top: -20px;
				text-shadow: 0 1px 0 #ccc, 0 2px 0 #ccc, 0 3px 0 #ccc, 0 4px 0 #ccc,
					0 5px 0 #ccc, 0 6px 0 #ccc, 0 7px 0 #ccc, 0 8px 0 #ccc, 0 9px 0 #ccc,
					0 50px 25px rgba(0, 0, 0, 0.2);
			}
		}
		.most {
			display: inline;
			margin: 0;
			font-size: 1.6em;
		}
		.footer {
			font-family: 'Pacifico', cursive;

			margin: 0;
			font-size: 1.1em;
		}
	}
	.media {
		margin: 1rem;
		padding: 1rem;
		background: gray;
		border-radius: 25px;
		& > * {
			padding-left: 0.5rem;
			padding-right: 0.5rem;
		}
		.github {
			cursor: pointer;
			color: black;
		}
		.matrix {
			cursor: pointer;
		}
		background: linear-gradient(270deg, #dce11e, #2ddbb6, #36db2d);
		background-size: 600% 600%;

		-webkit-animation: GradientShow 10s ease infinite;
		-moz-animation: GradientShow 10s ease infinite;
		animation: GradientShow 10s ease infinite;
	}

	@-webkit-keyframes GradientShow {
		0% {
			background-position: 1% 0%;
		}
		50% {
			background-position: 99% 100%;
		}
		100% {
			background-position: 1% 0%;
		}
	}
	@-moz-keyframes GradientShow {
		0% {
			background-position: 1% 0%;
		}
		50% {
			background-position: 99% 100%;
		}
		100% {
			background-position: 1% 0%;
		}
	}
	@keyframes GradientShow {
		0% {
			background-position: 1% 0%;
		}
		50% {
			background-position: 99% 100%;
		}
		100% {
			background-position: 1% 0%;
		}
	}
}

@mixin glitchCopy {
	content: attr(data-text);
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

.glitch {
	position: relative;
	color: white;
	font-size: 3em;
	letter-spacing: 0.3em;
	/* Animation provies a slight random skew. Check bottom of doc
for more information on how to random skew. */
	animation: glitch-skew 1s infinite linear alternate-reverse;

	// Creates a copy before our text.
	&::before {
		// Duplicates our text with the mixin.
		@include glitchCopy;
		// Scoots text slightly to the left for the color offset.
		left: 2px;
		// Creates the color 'shadow' that happens on the glitch.
		text-shadow: -2px 0 #ff00c1;
		/* Creates an initial clip for our glitch. This works in
	a typical top,right,bottom,left fashion and creates a mask
	to only show a certain part of the glitch at a time. */
		clip: rect(34px, 450px, 56px, 0);
		/* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
	with an alternating animation to keep things fresh. */
		animation: glitch-anim 5s infinite linear alternate-reverse;
	}

	// Creates a copy after our text. Note comments from ::before.
	&::after {
		@include glitchCopy;
		left: -2px;
		text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
		animation: glitch-anim2 1s infinite linear alternate-reverse;
	}
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
	$steps: 20;
	@for $i from 0 through $steps {
		#{percentage($i*(math.div(1, $steps)))} {
			clip: rect(random(100) + px, 9999px, random(100) + px, 0);
			transform: skew((math.div(random(100), 100)) + deg);
		}
	}
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
	$steps: 20;
	@for $i from 0 through $steps {
		#{percentage($i*(math.div(1, $steps)))} {
			clip: rect(random(100) + px, 9999px, random(100) + px, 0);
			transform: skew((math.div(random(100), 100)) + deg);
		}
	}
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
	$steps: 10;
	@for $i from 0 through $steps {
		#{percentage($i*(math.div(1, $steps)))} {
			transform: skew((random(10) - 5) + deg);
		}
	}
}
